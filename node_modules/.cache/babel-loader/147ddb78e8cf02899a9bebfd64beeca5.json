{"ast":null,"code":"var _jsxFileName = \"/Users/larissalanes/Documents/LabEddit/lab-eddit/src/pages/CommitPage/CommitPage.js\",\n    _s = $RefreshSig$();\n\nimport { useProtectedPage } from \"../../hooks/useProtectedPage\";\nimport { DivFeed, InputComments, Posts, PostsLists } from \"./CommitPage-styled\";\nimport { goToFeed } from \"../../rotes/Coordinator\";\nimport { useHistory, useParams } from \"react-router\";\nimport useRequestData from \"../../hooks/useRequestData\";\nimport { url_base } from \"../../constants/urls/URL\";\nimport Typography from '@mui/material/Typography';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardActions from '@mui/material/CardActions';\nimport * as React from 'react';\nimport Card from '@mui/material/Card';\nimport Avatar from '@mui/material/Avatar';\nimport { TextField } from \"@material-ui/core\";\nimport useForm from \"../../hooks/useForm\";\nimport { createCommit } from \"../../components/Requests\";\nimport axios from 'axios';\nimport ArrowUpwardOutlinedIcon from '@mui/icons-material/ArrowUpwardOutlined';\nimport ArrowDownwardOutlinedIcon from '@mui/icons-material/ArrowDownwardOutlined';\nimport ArrowBackOutlinedIcon from '@mui/icons-material/ArrowBackOutlined';\nimport IconButton from '@mui/material/IconButton';\nimport { Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommitPage = () => {\n  _s();\n\n  useProtectedPage();\n  const history = useHistory();\n  const params = useParams();\n  const commits = useRequestData([], `${url_base}/posts/${params.id}/comments`);\n  const [form, onChange, clear] = useForm({\n    body: ''\n  });\n  console.log(commits);\n\n  var corlorRandom = () => {\n    return \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n  };\n\n  const onSubmitFormComments = e => {\n    e.preventDefault();\n    createCommit(form, params, clear);\n  };\n\n  const createPostVote = commits => {\n    const body = {\n      direction: 1\n    };\n    axios.post(`${url_base}/comments/${commits.id}/votes`, body, {\n      headers: {\n        Authorization: localStorage.getItem('token')\n      }\n    }).then(res => {\n      console.log(res.data);\n      alert(`Você votou +1 no cometário de ${commits.username}`);\n    }).catch(err => {\n      console.log(err.data);\n    });\n  };\n\n  const changePostVote = commits => {\n    const body = {\n      direction: -1\n    };\n    axios.put(`${url_base}/comments/${commits.id}/votes`, body, {\n      headers: {\n        Authorization: localStorage.getItem('token')\n      }\n    }).then(res => {\n      alert(`Você votou -1 no cometário de ${commits.username}`);\n      console.log(res.data);\n    }).catch(err => {\n      console.log(err.data);\n    });\n  };\n\n  const deletePostVote = commits => {\n    const body = {\n      direction: 0\n    };\n    axios.delete(`${url_base}/comments/${commits.id}/votes`, body, {\n      headers: {\n        Authorization: localStorage.getItem('token')\n      }\n    }).then(res => {\n      alert(`Você tirou o seu voto do cometário de ${commits.username}`);\n      console.log(res.data);\n    }).catch(err => {\n      console.log(err.data);\n    });\n  };\n\n  const getPostComments = commits && commits.map(commits => {\n    const userFirstLetter = () => {\n      const firstLetter = commits.username && commits.username.substr(0, 1);\n      return commits.username && firstLetter.toUpperCase();\n    };\n\n    function formateDate() {\n      let newDate = new Date(commits.createdAt);\n      return `${newDate.getDate()}/${newDate.getMonth() + 1}/${newDate.getFullYear()} - ${newDate.getHours()}:${newDate.getMinutes()}`;\n    }\n\n    return /*#__PURE__*/_jsxDEV(PostsLists, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          maxWidth: 900\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              bgcolor: corlorRandom()\n            },\n            \"aria-label\": \"recipe\",\n            children: userFirstLetter()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this),\n          title: commits.username,\n          subheader: formateDate()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          margin: '20px',\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: commits.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          disableSpacing: true,\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"add to favorites\",\n            \"margin-left\": '10px',\n            onClick: () => changePostVote(commits),\n            children: /*#__PURE__*/_jsxDEV(ArrowDownwardOutlinedIcon, {\n              color: \"error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), commits.voteSum, /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"share\",\n            onClick: () => createPostVote(commits),\n            children: /*#__PURE__*/_jsxDEV(ArrowUpwardOutlinedIcon, {\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this)]\n      }, commits.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(DivFeed, {\n    children: /*#__PURE__*/_jsxDEV(Posts, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"share\",\n          onClick: () => goToFeed(history),\n          children: /*#__PURE__*/_jsxDEV(ArrowBackOutlinedIcon, {\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(InputComments, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"coment\\xE1rios \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: onSubmitFormComments,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            placeholder: 'Faça um comentario',\n            variant: 'outlined',\n            type: \"text\",\n            name: \"body\",\n            value: form.body,\n            onChange: onChange,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: 'contained',\n            \"aria-label\": \"add\",\n            fullWidth: true,\n            size: \"medium\",\n            color: \"secondary\",\n            children: \"Comentar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: getPostComments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CommitPage, \"I46h18TnfzyfNNXmvy1f5EjkvOQ=\", false, function () {\n  return [useProtectedPage, useHistory, useParams, useRequestData, useForm];\n});\n\n_c = CommitPage;\nexport default CommitPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommitPage\");","map":{"version":3,"sources":["/Users/larissalanes/Documents/LabEddit/lab-eddit/src/pages/CommitPage/CommitPage.js"],"names":["useProtectedPage","DivFeed","InputComments","Posts","PostsLists","goToFeed","useHistory","useParams","useRequestData","url_base","Typography","CardHeader","CardActions","React","Card","Avatar","TextField","useForm","createCommit","axios","ArrowUpwardOutlinedIcon","ArrowDownwardOutlinedIcon","ArrowBackOutlinedIcon","IconButton","Button","CommitPage","history","params","commits","id","form","onChange","clear","body","console","log","corlorRandom","Math","floor","random","toString","onSubmitFormComments","e","preventDefault","createPostVote","direction","post","headers","Authorization","localStorage","getItem","then","res","data","alert","username","catch","err","changePostVote","put","deletePostVote","delete","getPostComments","map","userFirstLetter","firstLetter","substr","toUpperCase","formateDate","newDate","Date","createdAt","getDate","getMonth","getFullYear","getHours","getMinutes","maxWidth","bgcolor","voteSum"],"mappings":"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","sourcesContent":["import { useProtectedPage } from \"../../hooks/useProtectedPage\";\nimport { DivFeed, InputComments,Posts, PostsLists } from \"./CommitPage-styled\";\nimport { goToFeed } from \"../../rotes/Coordinator\";\nimport { useHistory, useParams } from \"react-router\";\nimport useRequestData from \"../../hooks/useRequestData\"\nimport { url_base } from \"../../constants/urls/URL\";\nimport Typography from '@mui/material/Typography';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardActions from '@mui/material/CardActions';\nimport * as React from 'react';\nimport Card from '@mui/material/Card';\nimport Avatar from '@mui/material/Avatar';\nimport { TextField } from \"@material-ui/core\";\nimport useForm from \"../../hooks/useForm\";\nimport { createCommit } from \"../../components/Requests\";\nimport axios from 'axios';\nimport ArrowUpwardOutlinedIcon from '@mui/icons-material/ArrowUpwardOutlined';\nimport ArrowDownwardOutlinedIcon from '@mui/icons-material/ArrowDownwardOutlined';\nimport ArrowBackOutlinedIcon from '@mui/icons-material/ArrowBackOutlined';\nimport IconButton from '@mui/material/IconButton';\nimport { Button } from \"@mui/material\";\n\nconst CommitPage = () => {\n    useProtectedPage()\n\n    const history = useHistory()\n    const params = useParams()\n    const commits = useRequestData([], `${url_base}/posts/${params.id}/comments`)\n    const [form, onChange, clear] = useForm({body: ''})\n    console.log(commits)\n    \n    var corlorRandom = () => {\n      return \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n    };\n\n    const onSubmitFormComments = (e) => {\n      e.preventDefault()\n      createCommit(form, params, clear)\n    }\n\n  const createPostVote = (commits) => {\n    const body = {\n        direction: 1,\n    };\n    axios.post(`${url_base}/comments/${commits.id}/votes`, body, \n    {\n      headers:{\n        Authorization: localStorage.getItem('token')\n      },\n    })\n      .then((res) => {\n        console.log(res.data)\n        alert(`Você votou +1 no cometário de ${commits.username}`)\n      })\n      .catch((err) => {\n        console.log(err.data)\n\n      })\n  }\n  \n  const changePostVote = (commits) => {\n    const body = {\n      direction: -1,\n    }\n    axios.put(`${url_base}/comments/${commits.id}/votes`, body,{\n      headers:{\n        Authorization: localStorage.getItem('token')\n      },\n    })\n    .then((res) => {\n      alert(`Você votou -1 no cometário de ${commits.username}`)\n      console.log(res.data)\n    })\n    .catch((err) => {\n      console.log(err.data)\n\n    })\n  }\n\n  const deletePostVote = (commits) => {\n    const body = {\n      direction: 0,\n    }\n    axios.delete(`${url_base}/comments/${commits.id}/votes`, body, {\n      headers:{\n        Authorization: localStorage.getItem('token')\n      },\n    })\n    .then((res) => {\n      alert(`Você tirou o seu voto do cometário de ${commits.username}`)\n      console.log(res.data)\n    })\n    .catch((err) => {\n    console.log(err.data)\n    })\n  }\n    const getPostComments = commits && commits.map((commits) => {\n        const userFirstLetter = () => {\n            const firstLetter = commits.username && commits.username.substr(0, 1);\n            return commits.username && firstLetter.toUpperCase();\n          };\n          function formateDate(){\n            let newDate = new Date(commits.createdAt)\n            return`${newDate.getDate()}/${newDate.getMonth()+1}/${newDate.getFullYear()} - ${newDate.getHours()}:${newDate.getMinutes()}`\n          }\n        return(\n          <PostsLists>\n          <Card key={commits.id } sx={{ maxWidth: 900 }}>\n              <CardHeader\n              avatar={\n                <Avatar sx={{ bgcolor: corlorRandom() }} aria-label=\"recipe\">{userFirstLetter()}</Avatar>\n              }\n              title={commits.username}\n              subheader={formateDate()}\n              /> \n              <Typography margin={'20px'} variant=\"body2\" color=\"text.secondary\">\n              <h3>{commits.body}</h3>\n              </Typography>\n              <CardActions disableSpacing>\n              <IconButton aria-label=\"add to favorites\" margin-left={'10px'} onClick={() => changePostVote(commits) } >\n               <ArrowDownwardOutlinedIcon color='error' />\n              </IconButton>\n              {commits.voteSum}\n                 <IconButton aria-label=\"share\" onClick={() => createPostVote(commits)}>\n                   <ArrowUpwardOutlinedIcon color='primary' />\n                  </IconButton>\n              </CardActions>\n          </Card>\n          </PostsLists>\n        )\n    })\n    return(\n        <DivFeed>\n        <Posts>\n            <div>\n            <IconButton aria-label=\"share\"  onClick={() => goToFeed(history)}>\n                   <ArrowBackOutlinedIcon color='primary' />\n                  </IconButton>\n            </div>\n            <InputComments>\n            <h3>comentários </h3> \n                <form onSubmit={onSubmitFormComments}>\n                <TextField\n                placeholder={'Faça um comentario'}\n                variant={'outlined'}\n                type='text'\n                name='body'\n                value={form.body}\n                onChange={onChange}\n                fullWidth\n                />\n            < Button\n                  type=\"submit\"\n                variant={'contained'}\n                aria-label='add'\n                fullWidth\n                size='medium'\n                color=\"secondary\"\n                >Comentar</Button>\n                </form>\n            </InputComments>\n            <div>\n             {getPostComments}\n            </div>\n        </Posts>\n</DivFeed>\n    )\n}\n\nexport default CommitPage;"]},"metadata":{},"sourceType":"module"}