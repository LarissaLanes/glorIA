{"ast":null,"code":"var _jsxFileName = \"/Users/larissalanes/Desktop/glorIA_react/src/pages/ChatPage/ChatPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { DivButtonBack, DivChat, DivInputButton, DivBoxGptMessage, DivBoxUserMessage, DivListResponseBdGpt, DivLoading, DivGpt, BtnTextoSpecth, BtnVoice, DivTexts, Bottom } from \"./Styled-Chat\";\nimport Loading from \"../../components/Loading\";\nimport buttonBack from \"../../constants/assets/arrowBack.png\";\nimport { goToFeed } from \"../../rotes/Coordinator\";\nimport { useHistory } from \"react-router\";\nimport mickIcon from \"../../constants/assets/mick.svg\";\nimport sendIcon from \"../../constants/assets/send.png\";\nimport responsesGpt from \"../../pages/ChatPage/db\";\nimport play from \"../../constants/assets/Play.png\";\nimport like from \"../../constants/assets/like.png\";\nimport deslike from \"../../constants/assets/deslike.png\";\nimport yellow from \"../../constants/assets/elipseYellow.png\";\nimport red from \"../../constants/assets/elipseRed.png\";\nimport green from \"../../constants/assets/elipseGreen.png\";\nimport speakMessage from \"../../components/SpeechUtils\";\nimport startRecording from \"../../components/StartRecording\";\nimport LoginText from \"../../components/LoginText\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChatPage = () => {\n  _s();\n\n  const history = useHistory();\n  const apiKey = \"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\";\n  const [messageCount, setMessageCount] = useState(0);\n  const [disable, setDisable] = useState(false);\n  console.log(messageCount);\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false); // Estado para controlar a exibição da tela de loading\n\n  const handleSend = async () => {\n    if (inputMessage.trim() === \"\") {\n      return;\n    }\n\n    setMessageCount(messageCount + 1);\n\n    if (messageCount >= 2) {\n      setInputMessage(\"\");\n      setDisable(true); // console.log(\"chegou a 3\")\n    }\n\n    setLoading(true); // Mostrar tela de loading\n    //mensagem do banco de dados(faz o if e se nao encontrar mensagem no banco de dados enviar pra api)\n\n    const matchedResponse = responsesGpt.find(response => response.id.toLowerCase() === inputMessage.toLowerCase());\n\n    if (matchedResponse) {\n      // Se corresponder, usar o conteúdo da resposta como mensagem\n      const newMessages = [...messages, {\n        message: inputMessage,\n        sender: \"user\"\n      }];\n      setMessages(newMessages);\n      setInputMessage(\"\");\n      const {\n        id,\n        imagem,\n        materia,\n        data\n      } = matchedResponse;\n\n      const responseMessage = /*#__PURE__*/_jsxDEV(DivListResponseBdGpt, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: imagem,\n          alt: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: materia\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          style: {\n            textDecoration: \"none\"\n          },\n          href: data,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 8\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 8\n      }, this);\n\n      setMessages([...newMessages, {\n        message: responseMessage,\n        sender: \"ChatGPT\",\n        image: imagem\n      }]);\n      setLoading(false); // Esconder tela de loading\n\n      return;\n    } //\n\n\n    const newMessages = [...messages, {\n      message: inputMessage,\n      sender: \"user\"\n    }];\n    setMessages(newMessages);\n    setInputMessage(\"\");\n    const response = await fetch(\"https://api.openai.com/v1/engines/gpt-3.5-turbo-instruct/completions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${apiKey}`\n      },\n      body: JSON.stringify({\n        prompt: newMessages.map(_ref => {\n          let {\n            message,\n            sender\n          } = _ref;\n          return `${sender}: ${message}\\nGlorIA:`;\n        }).join(\"\\n\"),\n        max_tokens: 2048,\n        temperature: 0.5,\n        top_p: 1.0,\n        stop: [\"\\n\"]\n      })\n    });\n\n    if (!response.ok) {\n      console.error(\"Erro ao enviar mensagem para a API do ChatGPT\");\n      setLoading(false); // Esconder tela de loading\n\n      return;\n    }\n\n    const {\n      choices\n    } = await response.json();\n    const gptResponse = choices[0].text.trim();\n    setMessages([...newMessages, {\n      message: gptResponse,\n      sender: \"ChatGPT\"\n    }]);\n    setLoading(false); // Esconder tela de loading\n  };\n\n  return /*#__PURE__*/_jsxDEV(DivChat, {\n    children: [/*#__PURE__*/_jsxDEV(DivButtonBack, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => goToFeed(history),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: buttonBack,\n          alt: \"botao de fechar o chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        height: \"200vh\"\n      },\n      children: [messages.map((message, i) => {\n        return message.sender === \"user\" ? /*#__PURE__*/_jsxDEV(DivBoxUserMessage, {\n          children: message.message\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(DivBoxGptMessage, {\n            children: message.message\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DivGpt, {\n            children: [/*#__PURE__*/_jsxDEV(\"section\", {\n              children: /*#__PURE__*/_jsxDEV(BtnTextoSpecth, {\n                onClick: () => speakMessage(message.message),\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: play\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 21\n                }, this), \"Ouvir\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: like,\n                style: {\n                  width: \"15px\",\n                  margin: \"10px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: deslike,\n                style: {\n                  width: \"15px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this), i >= 1 && i < 2 && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: green,\n                style: {\n                  width: \"15px\",\n                  margin: \"10px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 39\n              }, this), i >= 2 && i < 3 && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: yellow,\n                style: {\n                  width: \"15px\",\n                  margin: \"10px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 39\n              }, this), i >= 3 && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: red,\n                style: {\n                  width: \"15px\",\n                  margin: \"10px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 30\n              }, this), i >= 1 && i < 2 && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"1 de 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 39\n              }, this), i >= 2 && i < 3 && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"2 de 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 39\n              }, this), i >= 3 && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"3 de 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 30\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this);\n      }), loading && /*#__PURE__*/_jsxDEV(DivLoading, {\n        children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 23\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Bottom, {\n      children: [/*#__PURE__*/_jsxDEV(DivTexts, {\n        children: [disable && /*#__PURE__*/_jsxDEV(LoginText, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"oiojo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DivInputButton, {\n        children: disable ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            style: {\n              background: \"#C4170C\",\n              opacity: \"0.4\",\n              color: \"#FFFFFF\"\n            },\n            disabled: disable,\n            type: \"text\",\n            placeholder: \"Converse com a glorIA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: disable,\n            style: {\n              opacity: \"0.4\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: sendIcon,\n              alt: \"bot\\xE3o enviar mensagem\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(BtnVoice, {\n            disabled: disable,\n            style: {\n              opacity: \"0.4\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: mickIcon,\n              alt: \"bot\\xE3o enviar \\xE1udio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Converse com a glorIA\",\n            value: inputMessage,\n            onChange: e => setInputMessage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSend,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: sendIcon,\n              alt: \"bot\\xE3o enviar mensagem\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(BtnVoice, {\n            onClick: () => startRecording(setInputMessage),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: mickIcon,\n              alt: \"bot\\xE3o enviar \\xE1udio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ChatPage, \"hZmIoWCrlNpzeEf7DG93ePjvtgI=\", false, function () {\n  return [useHistory];\n});\n\n_c = ChatPage;\nexport default ChatPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"sources":["/Users/larissalanes/Desktop/glorIA_react/src/pages/ChatPage/ChatPage.js"],"names":["React","useState","useEffect","useRef","DivButtonBack","DivChat","DivInputButton","DivBoxGptMessage","DivBoxUserMessage","DivListResponseBdGpt","DivLoading","DivGpt","BtnTextoSpecth","BtnVoice","DivTexts","Bottom","Loading","buttonBack","goToFeed","useHistory","mickIcon","sendIcon","responsesGpt","play","like","deslike","yellow","red","green","speakMessage","startRecording","LoginText","ChatPage","history","apiKey","messageCount","setMessageCount","disable","setDisable","console","log","messages","setMessages","inputMessage","setInputMessage","loading","setLoading","handleSend","trim","matchedResponse","find","response","id","toLowerCase","newMessages","message","sender","imagem","materia","data","responseMessage","textDecoration","image","fetch","method","headers","Authorization","body","JSON","stringify","prompt","map","join","max_tokens","temperature","top_p","stop","ok","error","choices","json","gptResponse","text","position","height","i","width","margin","background","opacity","color","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { DivButtonBack, DivChat, DivInputButton, DivBoxGptMessage, DivBoxUserMessage, DivListResponseBdGpt, DivLoading, DivGpt, BtnTextoSpecth, BtnVoice, DivTexts, Bottom} from \"./Styled-Chat\";\nimport Loading from \"../../components/Loading\";\nimport buttonBack from \"../../constants/assets/arrowBack.png\"\nimport { goToFeed } from \"../../rotes/Coordinator\";\nimport { useHistory} from \"react-router\";\nimport mickIcon from \"../../constants/assets/mick.svg\"\nimport sendIcon from \"../../constants/assets/send.png\"\nimport responsesGpt from \"../../pages/ChatPage/db\"\nimport play from \"../../constants/assets/Play.png\"\nimport like from \"../../constants/assets/like.png\"\nimport deslike from \"../../constants/assets/deslike.png\"\nimport yellow from \"../../constants/assets/elipseYellow.png\"\nimport red from \"../../constants/assets/elipseRed.png\"\nimport green from \"../../constants/assets/elipseGreen.png\"\nimport speakMessage from \"../../components/SpeechUtils\";\nimport startRecording from \"../../components/StartRecording\";\nimport LoginText from \"../../components/LoginText\";\n\nconst ChatPage = () => {\n  const history = useHistory()\n  const apiKey = \"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\"\n\n  const [messageCount, setMessageCount] = useState(0);\n  const [disable, setDisable] = useState(false);\n  console.log(messageCount)\n\n\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false); // Estado para controlar a exibição da tela de loading\n\n\n\n  const handleSend = async () => {\n    if (inputMessage.trim() === \"\") {\n      return;\n    }\n\n    setMessageCount(messageCount + 1);\n\n    if (messageCount >= 2) {\n      setInputMessage(\"\");\n      setDisable(true);\n      // console.log(\"chegou a 3\")\n\n    }\n\n\n    \n   \n\n    setLoading(true); // Mostrar tela de loading\n\n     //mensagem do banco de dados(faz o if e se nao encontrar mensagem no banco de dados enviar pra api)\n     const matchedResponse = responsesGpt.find(response => response.id.toLowerCase() === inputMessage.toLowerCase());\n\n     if (matchedResponse) {\n       // Se corresponder, usar o conteúdo da resposta como mensagem\n       const newMessages = [...messages, { message: inputMessage, sender: \"user\" }];\n       setMessages(newMessages);\n       setInputMessage(\"\");\n   \n       const { id, imagem, materia, data } = matchedResponse;\n       const responseMessage = \n       \n       <DivListResponseBdGpt key={id}>\n       <img src={imagem} alt={id} />\n       <p>{materia}</p>\n       <a style={{textDecoration: \"none\"}}href={data} target=\"_blank\" rel=\"noopener noreferrer\">\n       <h5>{data}</h5>\n       </a>\n       </DivListResponseBdGpt>\n \n       setMessages([...newMessages, { message: responseMessage, sender: \"ChatGPT\", image: imagem }]);\n       setLoading(false); // Esconder tela de loading\n\n       return;\n     }\n     //\n\n    const newMessages = [...messages, { message: inputMessage, sender: \"user\" }];\n    setMessages(newMessages);\n    setInputMessage(\"\");\n\n    const response = await fetch(\"https://api.openai.com/v1/engines/gpt-3.5-turbo-instruct/completions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${apiKey}`\n      },\n      body: JSON.stringify({\n        prompt: newMessages.map(({ message, sender }) => `${sender}: ${message}\\nGlorIA:`).join(\"\\n\"),\n        max_tokens: 2048,\n        temperature: 0.5,\n        top_p: 1.0,\n        stop: [\"\\n\"]\n      })\n    });\n\n    if (!response.ok) {\n      console.error(\"Erro ao enviar mensagem para a API do ChatGPT\");\n      setLoading(false); // Esconder tela de loading\n\n      return;\n    }\n\n    const { choices } = await response.json();\n    const gptResponse = choices[0].text.trim();\n    setMessages([...newMessages, { message: gptResponse, sender: \"ChatGPT\" }]);\n    setLoading(false); // Esconder tela de loading\n\n\n  };\n\n    return (\n      <DivChat>\n        <DivButtonBack>\n          <button onClick={() => goToFeed(history)}>\n            <img src={buttonBack}  alt=\"botao de fechar o chat\"/>\n          </button>\n          {/* <select></select> */}\n        </DivButtonBack>\n           <div style={{ position: \"relative\", height: \"200vh\"}} >\n          \n\n        {messages.map((message, i) => {\n          return message.sender === \"user\" ? (\n            <DivBoxUserMessage key={i}>{message.message}</DivBoxUserMessage>\n          ) : (\n            <div>\n              <DivBoxGptMessage key={i}>{message.message}</DivBoxGptMessage>\n              <DivGpt>\n                <section>\n                  <BtnTextoSpecth onClick={() => speakMessage(message.message)}>\n                    <img src={play}/>\n                    Ouvir\n                  </BtnTextoSpecth>\n                </section>\n                <section>\n                  <img src={like} style={{width: \"15px\", margin: \"10px\"}}/>\n                  <img src={deslike} style={{width: \"15px\"}}/>\n\n\n                  {i >= 1 && i < 2 && <img src={green} style={{width: \"15px\", margin: \"10px\"}}/>}\n                  {i >= 2 && i < 3 && <img src={yellow} style={{width: \"15px\", margin: \"10px\"}}/>}\n                  {i >= 3 && <img src={red} style={{width: \"15px\", margin: \"10px\"}}/>}\n                  {/* <p>{messageCount} de 3</p> */}\n\n                  {i >= 1 && i < 2 && <p>1 de 3</p>}\n                  {i >= 2 && i < 3 && <p>2 de 3</p>}\n                  {i >= 3 && <p>3 de 3</p>}\n                </section>\n              </DivGpt>\n            </div>\n            \n             \n          );\n        })}\n          {loading && <DivLoading><Loading/></DivLoading>} {/* Mostrar tela de loading se o estado 'loading' for true */}\n\n      </div>\n      <Bottom>\n        <DivTexts>\n        {disable && <LoginText></LoginText>}\n        <div>oiojo</div>\n        </DivTexts>\n        \n        <DivInputButton>\n  {disable ? (\n    <>\n      <input\n        style={{ background: \"#C4170C\", opacity: \"0.4\", color: \"#FFFFFF\"}}\n        disabled={disable}\n        type=\"text\"\n        placeholder=\"Converse com a glorIA\"\n      />\n      <button disabled={disable} style={{opacity: \"0.4\"}}>\n        <img src={sendIcon} alt=\"botão enviar mensagem\" />\n      </button>\n      <BtnVoice disabled={disable} style={{opacity: \"0.4\"}}>\n        <img src={mickIcon} alt=\"botão enviar áudio\" />\n      </BtnVoice>\n    </>\n  ) : (\n    <>\n      <input\n        type=\"text\"\n        placeholder=\"Converse com a glorIA\"\n        value={inputMessage}\n        onChange={(e) => setInputMessage(e.target.value)}\n      />\n      <button onClick={handleSend}>\n        <img src={sendIcon} alt=\"botão enviar mensagem\" />\n      </button>\n      <BtnVoice onClick={() => startRecording(setInputMessage)}>\n        <img src={mickIcon} alt=\"botão enviar áudio\" />\n      </BtnVoice>\n    </>\n  )}\n</DivInputButton>\n\n      </Bottom>\n      \n      </DivChat>\n    )\n}\n\nexport default ChatPage;"]},"metadata":{},"sourceType":"module"}