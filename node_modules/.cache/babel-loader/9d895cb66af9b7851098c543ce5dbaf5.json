{"ast":null,"code":"import axios from \"axios\";\nimport { url_base } from \"../constants/urls/URL\";\nimport { goToFeed } from \"../rotes/Coordinator\";\nimport swal from \"sweetalert\";\nexport const login = (body, clear, history, setLoading) => {\n  setLoading(true);\n  axios.post(`${url_base}/users/login`, body).then(res => {\n    localStorage.setItem(\"token\", res.data.token);\n    clear();\n    setLoading(false);\n    goToFeed(history);\n    swal({\n      title: \"Bem vindo!\",\n      text: \"Você está logado!\",\n      icon: \"success\"\n    });\n  }).catch(err => {\n    setLoading(false);\n    swal({\n      title: \"Houve um erro!\",\n      text: 'tente novamente',\n      icon: \"error\"\n    });\n  });\n};\nexport const signUp = (body, clear, history, setLoading) => {\n  setLoading(true);\n  axios.post(`${url_base}/users/signup`, body).then(res => {\n    localStorage.setItem(\"token\", res.data.token);\n    clear();\n    setLoading(false);\n    swal({\n      title: \"Cadastro realizado com sucesso\",\n      text: \"Aproveite!\",\n      icon: \"success\"\n    });\n    goToFeed(history);\n  }).catch(err => {\n    setLoading(false);\n    swal({\n      title: \"Houve um erro!\",\n      text: 'tente novamente',\n      icon: \"error\"\n    });\n  });\n};\nexport const createPost = (body, clear) => {\n  axios.post(`${url_base}/posts`, body, {\n    headers: {\n      Authorization: localStorage.getItem(\"token\")\n    }\n  }).then(res => {\n    alert(\"Post Criado com sucesso\");\n    clear();\n  }).catch(err => {});\n};\nexport const createCommit = (body, params, clear) => {\n  axios.post(`${url_base}/posts/${params.id}/comments`, body, {\n    headers: {\n      Authorization: localStorage.getItem(\"token\")\n    }\n  }).then(res => {\n    alert(res.data);\n    clear();\n  }).catch(err => {});\n};","map":{"version":3,"sources":["/Users/larissalanes/Documents/LabEddit/lab-eddit/src/components/Requests.js"],"names":["axios","url_base","goToFeed","swal","login","body","clear","history","setLoading","post","then","res","localStorage","setItem","data","token","title","text","icon","catch","err","signUp","createPost","headers","Authorization","getItem","alert","createCommit","params","id"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {url_base} from \"../constants/urls/URL\";\nimport { goToFeed } from \"../rotes/Coordinator\";\nimport swal from \"sweetalert\"\n\n   export const login = (body, clear, history, setLoading) => {\n     setLoading(true)\n      axios.post(`${url_base}/users/login`, body)\n      .then((res) => {  \n        localStorage.setItem(\"token\", res.data.token)\n        clear()\n        setLoading(false)\n        goToFeed(history)\n        swal({\n          title: \"Bem vindo!\",\n          text: \"Você está logado!\",\n          icon: \"success\",\n        });\n      })\n      .catch((err) => {\n        setLoading(false)\n        swal({\n          title: \"Houve um erro!\",\n          text: 'tente novamente',\n          icon: \"error\",\n        });\n      })\n    }\n\n    export const signUp = (body, clear, history, setLoading) => {\n      setLoading(true)\n      axios.post(`${url_base}/users/signup`, body)\n      .then((res) => {\n        localStorage.setItem(\"token\", res.data.token)\n        clear()\n        setLoading(false)\n        swal({\n          title: \"Cadastro realizado com sucesso\",\n          text: \"Aproveite!\",\n          icon: \"success\",\n        });\n        goToFeed(history)\n      })\n      .catch((err) => {\n        setLoading(false)\n        swal({\n          title: \"Houve um erro!\",\n          text: 'tente novamente',\n          icon: \"error\",\n        });\n      })\n    }\n\n    export const createPost = (body, clear) => {\n      axios.post(`${url_base}/posts`, body, {\n          headers: {\n              Authorization: localStorage.getItem(\"token\")\n          }\n      })\n      .then((res) => {\n        alert(\"Post Criado com sucesso\")\n        clear()\n        \n      })\n      .catch((err) => {\n       \n      })\n    }\n\n    export const createCommit = (body, params, clear) => {\n      axios.post(`${url_base}/posts/${params.id}/comments`, body,{\n          headers:{\n              Authorization: localStorage.getItem(\"token\")\n          }\n      })\n      .then((res) => {\n          alert(res.data)\n          clear()\n      }).catch((err) => {\n     \n      })\n  }\n\n  "]},"metadata":{},"sourceType":"module"}