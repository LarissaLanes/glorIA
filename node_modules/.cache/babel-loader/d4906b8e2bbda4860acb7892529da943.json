{"ast":null,"code":"var _jsxFileName = \"/Users/larissalanes/Documents/LabEddit/lab-eddit/src/pages/FeedPage/ListsFeedPage.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardActions from '@mui/material/CardActions';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport useRequestData from '../../hooks/useRequestData';\nimport { url_base } from '../../constants/urls/URL';\nimport { goToCommit } from '../../rotes/Coordinator';\nimport { useHistory } from 'react-router';\nimport QuestionAnswerOutlinedIcon from '@mui/icons-material/QuestionAnswerOutlined';\nimport axios from 'axios';\nimport ArrowUpwardOutlinedIcon from '@mui/icons-material/ArrowUpwardOutlined';\nimport ArrowDownwardOutlinedIcon from '@mui/icons-material/ArrowDownwardOutlined';\nimport { DivListPost } from \"./Styled-Feed\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RecipeReviewCard = () => {\n  _s();\n\n  const getPosts = useRequestData([], `${url_base}/posts`);\n  const history = useHistory();\n\n  const createPostVote = posts => {\n    const body = {\n      direction: 1\n    };\n    axios.post(`${url_base}/posts/${posts.id}/votes`, body, {\n      headers: {\n        Authorization: localStorage.getItem('token')\n      }\n    }).then(res => {\n      console.log(res.data);\n      alert(`Você votou +1 no post de ${posts.username}`);\n    }).catch(err => {\n      console.log(err.data);\n    });\n  };\n\n  const changePostVote = posts => {\n    const body = {\n      direction: -1\n    };\n    axios.put(`${url_base}/posts/${posts.id}/votes`, body, {\n      headers: {\n        Authorization: localStorage.getItem('token')\n      }\n    }).then(res => {\n      alert(`Você votou -1 no post de ${posts.username}`);\n      console.log(res.data);\n    }).catch(err => {\n      console.log(err.data);\n    });\n  };\n\n  const deletePostVote = posts => {\n    axios.delete(`${url_base}/posts/${posts.id}/votes`, {\n      headers: {\n        Authorization: localStorage.getItem('token')\n      }\n    }).then(res => {\n      alert(`Você tirou o seu voto do post de ${posts.username}`);\n      console.log(res.data);\n    }).catch(err => {\n      console.log(err.data);\n    });\n  };\n\n  var corlorRandom = () => {\n    return \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n  };\n\n  const onClickCard = id => {\n    goToCommit(history, id);\n  };\n\n  const getPostPeoples = getPosts.map(posts => {\n    const userFirstLetter = () => {\n      const firstLetter = posts.username && posts.username.substr(0, 1);\n      return posts.username && firstLetter.toUpperCase();\n    };\n\n    function formateDate() {\n      let newDate = new Date(posts.createdAt);\n      return `${newDate.getDate()}/${newDate.getMonth() + 1}/${newDate.getFullYear()} - ${newDate.getHours()}:${newDate.getMinutes()}`;\n    }\n\n    return /*#__PURE__*/_jsxDEV(DivListPost, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          maxWidth: 900\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n            sx: {\n              bgcolor: corlorRandom()\n            },\n            \"aria-label\": \"recipe\",\n            children: userFirstLetter()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 16\n          }, this),\n          title: posts.username,\n          subheader: formateDate()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          margin: '20px',\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: posts.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 20\n          }, this), posts.body]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"add to favorites\",\n            \"margin-left\": '10px',\n            onClick: () => changePostVote(posts),\n            children: /*#__PURE__*/_jsxDEV(ArrowDownwardOutlinedIcon, {\n              color: \"error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 18\n          }, this), posts.voteSum, /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"share\",\n            onClick: () => createPostVote(posts),\n            children: /*#__PURE__*/_jsxDEV(ArrowUpwardOutlinedIcon, {\n              color: \"secondary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            \"aria-label\": \"commits\",\n            onClick: () => onClickCard(posts.id),\n            children: [/*#__PURE__*/_jsxDEV(QuestionAnswerOutlinedIcon, {\n              color: \"secondary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 20\n            }, this), posts.commentCount === '1' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: posts.commentCount\n            }, void 0, false) : '0']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 18\n        }, this)]\n      }, posts.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: getPostPeoples\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RecipeReviewCard, \"b2Fey0FMQ87K1M9qvOp7sVJogQI=\", false, function () {\n  return [useRequestData, useHistory];\n});\n\n_c = RecipeReviewCard;\nexport default RecipeReviewCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeReviewCard\");","map":{"version":3,"sources":["/Users/larissalanes/Documents/LabEddit/lab-eddit/src/pages/FeedPage/ListsFeedPage.js"],"names":["React","Card","CardHeader","CardActions","Avatar","IconButton","Typography","useRequestData","url_base","goToCommit","useHistory","QuestionAnswerOutlinedIcon","axios","ArrowUpwardOutlinedIcon","ArrowDownwardOutlinedIcon","DivListPost","RecipeReviewCard","getPosts","history","createPostVote","posts","body","direction","post","id","headers","Authorization","localStorage","getItem","then","res","console","log","data","alert","username","catch","err","changePostVote","put","deletePostVote","delete","corlorRandom","Math","floor","random","toString","onClickCard","getPostPeoples","map","userFirstLetter","firstLetter","substr","toUpperCase","formateDate","newDate","Date","createdAt","getDate","getMonth","getFullYear","getHours","getMinutes","maxWidth","bgcolor","title","voteSum","commentCount"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardActions from '@mui/material/CardActions';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport useRequestData from '../../hooks/useRequestData';\nimport { url_base } from '../../constants/urls/URL';\nimport { goToCommit } from '../../rotes/Coordinator';\nimport { useHistory} from 'react-router';\nimport QuestionAnswerOutlinedIcon from '@mui/icons-material/QuestionAnswerOutlined';\nimport axios from 'axios';\nimport ArrowUpwardOutlinedIcon from '@mui/icons-material/ArrowUpwardOutlined';\nimport ArrowDownwardOutlinedIcon from '@mui/icons-material/ArrowDownwardOutlined';\nimport {DivListPost} from \"./Styled-Feed\"\n\n\nconst RecipeReviewCard = () =>  {\n  const getPosts = useRequestData([], `${url_base}/posts`)\n  const history = useHistory()\n\n\n  const createPostVote = (posts) => {\n    const body = {\n        direction: 1,\n    };\n    axios.post(`${url_base}/posts/${posts.id}/votes`, body, \n    {\n      headers:{\n        Authorization: localStorage.getItem('token')\n      },\n    })\n      .then((res) => {\n        console.log(res.data)\n        alert(`Você votou +1 no post de ${posts.username}`)\n      })\n      .catch((err) => {\n        console.log(err.data)\n      })\n  }\n\n  const changePostVote = (posts) => {\n    const body = {\n      direction: -1,\n    }\n    axios.put(`${url_base}/posts/${posts.id}/votes`, body,{\n      headers:{\n        Authorization: localStorage.getItem('token')\n      },\n    })\n    .then((res) => {\n      alert(`Você votou -1 no post de ${posts.username}`)\n      console.log(res.data)\n      \n\n    })\n    .catch((err) => {\n      console.log(err.data)\n\n    })\n  }\n\n  const deletePostVote = (posts) => {\n    axios.delete(`${url_base}/posts/${posts.id}/votes`, {\n      headers:{\n        Authorization: localStorage.getItem('token')\n      },\n    })\n    .then((res) => {\n      alert(`Você tirou o seu voto do post de ${posts.username}`)\n      console.log(res.data)\n      \n    })\n    .catch((err) => {\n    console.log(err.data)\n    \n    })\n  }\n\n  var corlorRandom = () => {\n    return \"#\" + Math.floor(Math.random() * 16777215 ).toString(16);\n  };\n\n  const onClickCard = (id) => {\n    goToCommit(history, id);\n  };\n\n  \n\n  \n\n  const getPostPeoples = getPosts.map((posts) => {\n    const userFirstLetter = () => {\n      const firstLetter = posts.username && posts.username.substr(0, 1);\n      return posts.username && firstLetter.toUpperCase();\n    };\n    function formateDate(){\n      let newDate = new Date(posts.createdAt)\n      return`${newDate.getDate()}/${newDate.getMonth()+1}/${newDate.getFullYear()} - ${newDate.getHours()}:${newDate.getMinutes()}`\n    }\n      return(\n        <DivListPost>\n          <Card key={posts.id } sx={{ maxWidth: 900 }} >\n            <CardHeader\n             avatar={\n               <Avatar sx={{ bgcolor: corlorRandom() }} aria-label=\"recipe\">{userFirstLetter()}</Avatar>\n             }\n             title={posts.username}\n             subheader={formateDate()}\n               />\n               <Typography margin={'20px'} variant=\"body2\" color=\"text.secondary\">\n                   <h3>{posts.title}</h3>\n                    {posts.body}\n                 </Typography>\n                 <CardActions >\n                 <IconButton aria-label=\"add to favorites\" margin-left={'10px'} onClick={() => changePostVote(posts)} >\n               <ArrowDownwardOutlinedIcon color='error' />\n              </IconButton>\n              {posts.voteSum}\n                 <IconButton aria-label=\"share\" onClick={() => createPostVote(posts)}>\n                   <ArrowUpwardOutlinedIcon color='secondary' />\n                  </IconButton>\n                \n                  <IconButton aria-label=\"commits\" onClick={() => onClickCard(posts.id)}>\n                   <QuestionAnswerOutlinedIcon color='secondary'/> \n                   {posts.commentCount === '1' ? (<>{posts.commentCount}</>) : ('0')}\n                  </IconButton>\n                  \n                 </CardActions>\n          </Card>\n          </DivListPost>\n      )\n  })\n \n  return (\n    <div>\n       {getPostPeoples} \n    </div>\n \n   )\n}\n\nexport default RecipeReviewCard;\n\n\n"]},"metadata":{},"sourceType":"module"}